/*
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.freeclimbapi;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.concurrent.Callable;

/**
 * AddToConferenceAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-31T13:04:20.214-05:00[America/Chicago]")
public class AddToConferenceAllOf {
  public static final String SERIALIZED_NAME_ALLOW_CALL_CONTROL = "allowCallControl";
  @SerializedName(SERIALIZED_NAME_ALLOW_CALL_CONTROL)
  private Boolean allowCallControl;

  public static final String SERIALIZED_NAME_CALL_CONTROL_SEQUENCE = "callControlSequence";
  @SerializedName(SERIALIZED_NAME_CALL_CONTROL_SEQUENCE)
  private String callControlSequence;

  public static final String SERIALIZED_NAME_CALL_CONTROL_URL = "callControlUrl";
  @SerializedName(SERIALIZED_NAME_CALL_CONTROL_URL)
  private String callControlUrl;

  public static final String SERIALIZED_NAME_CONFERENCE_ID = "conferenceId";
  @SerializedName(SERIALIZED_NAME_CONFERENCE_ID)
  private String conferenceId;

  public static final String SERIALIZED_NAME_CALL_ID = "callId";
  @SerializedName(SERIALIZED_NAME_CALL_ID)
  private Boolean callId;

  public static final String SERIALIZED_NAME_LEAVE_CONFERENCE_URL = "leaveConferenceUrl";
  @SerializedName(SERIALIZED_NAME_LEAVE_CONFERENCE_URL)
  private String leaveConferenceUrl;

  public static final String SERIALIZED_NAME_LISTEN = "listen";
  @SerializedName(SERIALIZED_NAME_LISTEN)
  private Boolean listen;

  public static final String SERIALIZED_NAME_NOTIFICATION_URL = "notificationUrl";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_URL)
  private String notificationUrl;

  public static final String SERIALIZED_NAME_START_CONF_ON_ENTER = "startConfOnEnter";
  @SerializedName(SERIALIZED_NAME_START_CONF_ON_ENTER)
  private Boolean startConfOnEnter;

  public static final String SERIALIZED_NAME_TALK = "talk";
  @SerializedName(SERIALIZED_NAME_TALK)
  private Boolean talk;

  public AddToConferenceAllOf() { 
  }

  public AddToConferenceAllOf allowCallControl(Boolean allowCallControl) {
    
    this.allowCallControl = allowCallControl;
    return this;
  }

   /**
   * If &#x60;true&#x60;, Call control will be enabled for this Participant&#39;s Call leg.
   * @return allowCallControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If `true`, Call control will be enabled for this Participant's Call leg.")

  public Boolean getAllowCallControl() {
    return allowCallControl;
  }


  public void setAllowCallControl(Boolean allowCallControl) {
    this.allowCallControl = allowCallControl;
  }


  public AddToConferenceAllOf callControlSequence(String callControlSequence) {
    
    this.callControlSequence = callControlSequence;
    return this;
  }

   /**
   * Defines a sequence of digits that, when entered by this caller, invokes the &#x60;callControlUrl&#x60;. Only digits plus &#39;*&#39;, and &#39;#&#39; may be used.
   * @return callControlSequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines a sequence of digits that, when entered by this caller, invokes the `callControlUrl`. Only digits plus '*', and '#' may be used.")

  public String getCallControlSequence() {
    return callControlSequence;
  }


  public void setCallControlSequence(String callControlSequence) {
    this.callControlSequence = callControlSequence;
  }


  public AddToConferenceAllOf callControlUrl(String callControlUrl) {
    
    this.callControlUrl = callControlUrl;
    return this;
  }

   /**
   * URL to be invoked when this Participant enters the digit sequence defined in the &#x60;callControlSequence&#x60; attribute.
   * @return callControlUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL to be invoked when this Participant enters the digit sequence defined in the `callControlSequence` attribute.")

  public String getCallControlUrl() {
    return callControlUrl;
  }


  public void setCallControlUrl(String callControlUrl) {
    this.callControlUrl = callControlUrl;
  }


  public AddToConferenceAllOf conferenceId(String conferenceId) {
    
    this.conferenceId = conferenceId;
    return this;
  }

   /**
   * ID of the Conference to which to add the Participant (Call leg). Conference must exist or an error will result.
   * @return conferenceId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "ID of the Conference to which to add the Participant (Call leg). Conference must exist or an error will result.")

  public String getConferenceId() {
    return conferenceId;
  }


  public void setConferenceId(String conferenceId) {
    this.conferenceId = conferenceId;
  }


  public AddToConferenceAllOf callId(Boolean callId) {
    
    this.callId = callId;
    return this;
  }

   /**
   * ID of the Call that will be added to the specified Conference. The Call must be in progress or an error will result. If the Call is part of an existing Conference, it is first removed from that Conference and is then moved to the new one.
   * @return callId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the Call that will be added to the specified Conference. The Call must be in progress or an error will result. If the Call is part of an existing Conference, it is first removed from that Conference and is then moved to the new one.")

  public Boolean getCallId() {
    return callId;
  }


  public void setCallId(Boolean callId) {
    this.callId = callId;
  }


  public AddToConferenceAllOf leaveConferenceUrl(String leaveConferenceUrl) {
    
    this.leaveConferenceUrl = leaveConferenceUrl;
    return this;
  }

   /**
   * URL to be invoked when the Participant leaves the Conference. 
   * @return leaveConferenceUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL to be invoked when the Participant leaves the Conference. ")

  public String getLeaveConferenceUrl() {
    return leaveConferenceUrl;
  }


  public void setLeaveConferenceUrl(String leaveConferenceUrl) {
    this.leaveConferenceUrl = leaveConferenceUrl;
  }


  public AddToConferenceAllOf listen(Boolean listen) {
    
    this.listen = listen;
    return this;
  }

   /**
   * If &#x60;true&#x60;, the Participant joins the Conference with listen privileges. This may be modified later via the REST API or &#x60;SetListen&#x60; PerCL command.
   * @return listen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If `true`, the Participant joins the Conference with listen privileges. This may be modified later via the REST API or `SetListen` PerCL command.")

  public Boolean getListen() {
    return listen;
  }


  public void setListen(Boolean listen) {
    this.listen = listen;
  }


  public AddToConferenceAllOf notificationUrl(String notificationUrl) {
    
    this.notificationUrl = notificationUrl;
    return this;
  }

   /**
   * When the Participant enters the Conference, this URL will be invoked using an HTTP POST request with the standard request parameters.
   * @return notificationUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When the Participant enters the Conference, this URL will be invoked using an HTTP POST request with the standard request parameters.")

  public String getNotificationUrl() {
    return notificationUrl;
  }


  public void setNotificationUrl(String notificationUrl) {
    this.notificationUrl = notificationUrl;
  }


  public AddToConferenceAllOf startConfOnEnter(Boolean startConfOnEnter) {
    
    this.startConfOnEnter = startConfOnEnter;
    return this;
  }

   /**
   * Flag that indicates whether a Conference starts upon entry of this particular Participant. This is usually set to &#x60;true&#x60; for moderators and &#x60;false&#x60; for all other Participants.
   * @return startConfOnEnter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag that indicates whether a Conference starts upon entry of this particular Participant. This is usually set to `true` for moderators and `false` for all other Participants.")

  public Boolean getStartConfOnEnter() {
    return startConfOnEnter;
  }


  public void setStartConfOnEnter(Boolean startConfOnEnter) {
    this.startConfOnEnter = startConfOnEnter;
  }


  public AddToConferenceAllOf talk(Boolean talk) {
    
    this.talk = talk;
    return this;
  }

   /**
   * If &#x60;true&#x60;, the Participant joins the Conference with talk privileges. This may be modified later via the REST API or &#x60;SetTalk&#x60; PerCL command. 
   * @return talk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If `true`, the Participant joins the Conference with talk privileges. This may be modified later via the REST API or `SetTalk` PerCL command. ")

  public Boolean getTalk() {
    return talk;
  }


  public void setTalk(Boolean talk) {
    this.talk = talk;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddToConferenceAllOf addToConferenceAllOf = (AddToConferenceAllOf) o;
    return Objects.equals(this.allowCallControl, addToConferenceAllOf.allowCallControl) &&
        Objects.equals(this.callControlSequence, addToConferenceAllOf.callControlSequence) &&
        Objects.equals(this.callControlUrl, addToConferenceAllOf.callControlUrl) &&
        Objects.equals(this.conferenceId, addToConferenceAllOf.conferenceId) &&
        Objects.equals(this.callId, addToConferenceAllOf.callId) &&
        Objects.equals(this.leaveConferenceUrl, addToConferenceAllOf.leaveConferenceUrl) &&
        Objects.equals(this.listen, addToConferenceAllOf.listen) &&
        Objects.equals(this.notificationUrl, addToConferenceAllOf.notificationUrl) &&
        Objects.equals(this.startConfOnEnter, addToConferenceAllOf.startConfOnEnter) &&
        Objects.equals(this.talk, addToConferenceAllOf.talk);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowCallControl, callControlSequence, callControlUrl, conferenceId, callId, leaveConferenceUrl, listen, notificationUrl, startConfOnEnter, talk);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddToConferenceAllOf {\n");
    sb.append("    allowCallControl: ").append(toIndentedString(allowCallControl)).append("\n");
    sb.append("    callControlSequence: ").append(toIndentedString(callControlSequence)).append("\n");
    sb.append("    callControlUrl: ").append(toIndentedString(callControlUrl)).append("\n");
    sb.append("    conferenceId: ").append(toIndentedString(conferenceId)).append("\n");
    sb.append("    callId: ").append(toIndentedString(callId)).append("\n");
    sb.append("    leaveConferenceUrl: ").append(toIndentedString(leaveConferenceUrl)).append("\n");
    sb.append("    listen: ").append(toIndentedString(listen)).append("\n");
    sb.append("    notificationUrl: ").append(toIndentedString(notificationUrl)).append("\n");
    sb.append("    startConfOnEnter: ").append(toIndentedString(startConfOnEnter)).append("\n");
    sb.append("    talk: ").append(toIndentedString(talk)).append("\n");
    sb.append("}");
    return sb.toString();
  }


  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

