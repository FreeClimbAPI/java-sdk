/*
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.github.freeclimbapi.models;

import java.util.Objects;
import java.util.Arrays;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;
import org.threeten.bp.format.DateTimeFormatter;
import java.io.IOException;
import java.util.*;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.annotations.SerializedName;
import java.util.List;
import java.math.BigDecimal;
import java.net.URI;
import org.openapitools.jackson.nullable.JsonNullable;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.github.freeclimbapi.enums.*;
import com.github.freeclimbapi.models.*;
import com.github.freeclimbapi.JSON;
import com.github.freeclimbapi.utils.*;

import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.concurrent.Callable;

/**
 * QueueResultAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class QueueResultAllOf {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_QUEUE_ID = "queueId";
  @SerializedName(SERIALIZED_NAME_QUEUE_ID)
  private String queueId;

  public static final String SERIALIZED_NAME_ALIAS = "alias";
  @SerializedName(SERIALIZED_NAME_ALIAS)
  private String alias;

  public static final String SERIALIZED_NAME_MAX_SIZE = "maxSize";
  @SerializedName(SERIALIZED_NAME_MAX_SIZE)
  private Integer maxSize;

  public static final String SERIALIZED_NAME_CURRENT_SIZE = "currentSize";
  @SerializedName(SERIALIZED_NAME_CURRENT_SIZE)
  private Integer currentSize;

  public static final String SERIALIZED_NAME_AVERAGE_QUEUE_REMOVAL_TIME = "averageQueueRemovalTime";
  @SerializedName(SERIALIZED_NAME_AVERAGE_QUEUE_REMOVAL_TIME)
  private Integer averageQueueRemovalTime;

  public static final String SERIALIZED_NAME_SUBRESOURCE_URIS = "subresourceUris";
  @SerializedName(SERIALIZED_NAME_SUBRESOURCE_URIS)
  private Object subresourceUris;

  public QueueResultAllOf() { 
  }

  public QueueResultAllOf accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * ID of the account that created this Queue.
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the account that created this Queue.")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public QueueResultAllOf queueId(String queueId) {
    
    this.queueId = queueId;
    return this;
  }

   /**
   * A string that uniquely identifies this Queue resource.
   * @return queueId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A string that uniquely identifies this Queue resource.")

  public String getQueueId() {
    return queueId;
  }


  public void setQueueId(String queueId) {
    this.queueId = queueId;
  }


  public QueueResultAllOf alias(String alias) {
    
    this.alias = alias;
    return this;
  }

   /**
   * A description for this Queue.
   * @return alias
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Queue.")

  public String getAlias() {
    return alias;
  }


  public void setAlias(String alias) {
    this.alias = alias;
  }


  public QueueResultAllOf maxSize(Integer maxSize) {
    
    this.maxSize = maxSize;
    return this;
  }

   /**
   * The maximum number of Calls permitted in the Queue. Default is 100. Maximum is 1000.
   * @return maxSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of Calls permitted in the Queue. Default is 100. Maximum is 1000.")

  public Integer getMaxSize() {
    return maxSize;
  }


  public void setMaxSize(Integer maxSize) {
    this.maxSize = maxSize;
  }


  public QueueResultAllOf currentSize(Integer currentSize) {
    
    this.currentSize = currentSize;
    return this;
  }

   /**
   * Count of Calls currently in the Queue.
   * @return currentSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of Calls currently in the Queue.")

  public Integer getCurrentSize() {
    return currentSize;
  }


  public void setCurrentSize(Integer currentSize) {
    this.currentSize = currentSize;
  }


  public QueueResultAllOf averageQueueRemovalTime(Integer averageQueueRemovalTime) {
    
    this.averageQueueRemovalTime = averageQueueRemovalTime;
    return this;
  }

   /**
   * The average amount of time (in seconds) for a call to be removed from the queue.
   * @return averageQueueRemovalTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The average amount of time (in seconds) for a call to be removed from the queue.")

  public Integer getAverageQueueRemovalTime() {
    return averageQueueRemovalTime;
  }


  public void setAverageQueueRemovalTime(Integer averageQueueRemovalTime) {
    this.averageQueueRemovalTime = averageQueueRemovalTime;
  }


  public QueueResultAllOf subresourceUris(Object subresourceUris) {
    
    this.subresourceUris = subresourceUris;
    return this;
  }

   /**
   * List of subresources for this Queue (which includes Queue members).
   * @return subresourceUris
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of subresources for this Queue (which includes Queue members).")

  public Object getSubresourceUris() {
    return subresourceUris;
  }


  public void setSubresourceUris(Object subresourceUris) {
    this.subresourceUris = subresourceUris;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueueResultAllOf queueResultAllOf = (QueueResultAllOf) o;
    return Objects.equals(this.accountId, queueResultAllOf.accountId) &&
        Objects.equals(this.queueId, queueResultAllOf.queueId) &&
        Objects.equals(this.alias, queueResultAllOf.alias) &&
        Objects.equals(this.maxSize, queueResultAllOf.maxSize) &&
        Objects.equals(this.currentSize, queueResultAllOf.currentSize) &&
        Objects.equals(this.averageQueueRemovalTime, queueResultAllOf.averageQueueRemovalTime) &&
        Objects.equals(this.subresourceUris, queueResultAllOf.subresourceUris);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, queueId, alias, maxSize, currentSize, averageQueueRemovalTime, subresourceUris);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueueResultAllOf {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    queueId: ").append(toIndentedString(queueId)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    maxSize: ").append(toIndentedString(maxSize)).append("\n");
    sb.append("    currentSize: ").append(toIndentedString(currentSize)).append("\n");
    sb.append("    averageQueueRemovalTime: ").append(toIndentedString(averageQueueRemovalTime)).append("\n");
    sb.append("    subresourceUris: ").append(toIndentedString(subresourceUris)).append("\n");
    sb.append("}");
    return sb.toString();
  }


  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

