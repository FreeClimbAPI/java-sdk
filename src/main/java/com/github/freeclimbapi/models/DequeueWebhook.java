/*
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.github.freeclimbapi.models;

import java.util.Objects;
import java.util.Arrays;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;
import org.threeten.bp.format.DateTimeFormatter;
import java.io.IOException;
import java.util.*;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.annotations.SerializedName;
import java.util.List;
import java.math.BigDecimal;
import java.net.URI;
import org.openapitools.jackson.nullable.JsonNullable;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.github.freeclimbapi.enums.*;
import com.github.freeclimbapi.models.*;
import com.github.freeclimbapi.JSON;

import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.concurrent.Callable;

/**
 * A queued call has been dequeued and the actionUrl of the corresponding Enqueue action is being invoked. A PerCL response is expected.
 */
@ApiModel(description = "A queued call has been dequeued and the actionUrl of the corresponding Enqueue action is being invoked. A PerCL response is expected.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DequeueWebhook extends Webhook {
  public static DequeueWebhook deserialize(String payload) {
    return (DequeueWebhook)(new JSON().getGson().fromJson(payload, Webhook.class));
  }
  public static String getDiscriminatorValue() {
    return "dequeue";
  }
  
  public static final String SERIALIZED_NAME_REQUEST_TYPE = "requestType";
  
  
  @SerializedName(SERIALIZED_NAME_REQUEST_TYPE)
  
  protected String requestType;

  
  public static final String SERIALIZED_NAME_CALL_ID = "callId";
  
  
  @SerializedName(SERIALIZED_NAME_CALL_ID)
  
  private String callId;

  
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  
  
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  
  private String accountId;

  
  public static final String SERIALIZED_NAME_FROM = "from";
  
  
  @SerializedName(SERIALIZED_NAME_FROM)
  
  private String from;

  
  public static final String SERIALIZED_NAME_TO = "to";
  
  
  @SerializedName(SERIALIZED_NAME_TO)
  
  private String to;

  
  public static final String SERIALIZED_NAME_CALL_STATUS = "callStatus";
  
  
  @SerializedName(SERIALIZED_NAME_CALL_STATUS)
  
  private CallStatus callStatus;

  
  public static final String SERIALIZED_NAME_DIRECTION = "direction";
  
  
  @SerializedName(SERIALIZED_NAME_DIRECTION)
  
  private CallDirection direction;

  
  public static final String SERIALIZED_NAME_CONFERENCE_ID = "conferenceId";
  
  
  @SerializedName(SERIALIZED_NAME_CONFERENCE_ID)
  
  private String conferenceId;

  
  public static final String SERIALIZED_NAME_QUEUE_ID = "queueId";
  
  
  @SerializedName(SERIALIZED_NAME_QUEUE_ID)
  
  private String queueId;

  
  public static final String SERIALIZED_NAME_QUEUE_RESULT = "queueResult";
  
  
  @SerializedName(SERIALIZED_NAME_QUEUE_RESULT)
  
  private String queueResult;

  
  public static final String SERIALIZED_NAME_QUEUE_TIME = "queueTime";
  
  
  @SerializedName(SERIALIZED_NAME_QUEUE_TIME)
  
  private Integer queueTime;


  public DequeueWebhook() { 
    this.requestType = this.getClass().getSimpleName();
  }

  public DequeueWebhook requestType(String requestType) {
    
    this.requestType = requestType;
    return this;
  }

   /**
   * Context or reason why this request is being made. Will be dequeue - A queued call has been dequeued and the actionUrl of the corresponding Enqueue action is being invoked.
   * @return requestType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Context or reason why this request is being made. Will be dequeue - A queued call has been dequeued and the actionUrl of the corresponding Enqueue action is being invoked.")

  public String getRequestType() {
    return requestType;
  }


  public void setRequestType(String requestType) {
    this.requestType = requestType;
  }


  public DequeueWebhook callId(String callId) {
    
    this.callId = callId;
    return this;
  }

   /**
   * Unique ID for this Call, generated by FreeClimb.
   * @return callId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique ID for this Call, generated by FreeClimb.")

  public String getCallId() {
    return callId;
  }


  public void setCallId(String callId) {
    this.callId = callId;
  }


  public DequeueWebhook accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Account ID associated with your account.
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Account ID associated with your account.")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public DequeueWebhook from(String from) {
    
    this.from = from;
    return this;
  }

   /**
   * Phone number of the party that initiated the Call (in E.164 format).
   * @return from
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Phone number of the party that initiated the Call (in E.164 format).")

  public String getFrom() {
    return from;
  }


  public void setFrom(String from) {
    this.from = from;
  }


  public DequeueWebhook to(String to) {
    
    this.to = to;
    return this;
  }

   /**
   * Phone number provisioned to you and to which this Call is directed (in E.164 format).
   * @return to
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Phone number provisioned to you and to which this Call is directed (in E.164 format).")

  public String getTo() {
    return to;
  }


  public void setTo(String to) {
    this.to = to;
  }


  public DequeueWebhook callStatus(CallStatus callStatus) {
    
    this.callStatus = callStatus;
    return this;
  }

   /**
   * Get callStatus
   * @return callStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CallStatus getCallStatus() {
    return callStatus;
  }


  public void setCallStatus(CallStatus callStatus) {
    this.callStatus = callStatus;
  }


  public DequeueWebhook direction(CallDirection direction) {
    
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CallDirection getDirection() {
    return direction;
  }


  public void setDirection(CallDirection direction) {
    this.direction = direction;
  }


  public DequeueWebhook conferenceId(String conferenceId) {
    
    this.conferenceId = conferenceId;
    return this;
  }

   /**
   * Unique ID of the Conference.
   * @return conferenceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique ID of the Conference.")

  public String getConferenceId() {
    return conferenceId;
  }


  public void setConferenceId(String conferenceId) {
    this.conferenceId = conferenceId;
  }


  public DequeueWebhook queueId(String queueId) {
    
    this.queueId = queueId;
    return this;
  }

   /**
   * This is only populated if the request pertains to a Queue. Otherwise, it is set to null.
   * @return queueId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is only populated if the request pertains to a Queue. Otherwise, it is set to null.")

  public String getQueueId() {
    return queueId;
  }


  public void setQueueId(String queueId) {
    this.queueId = queueId;
  }


  public DequeueWebhook queueResult(String queueResult) {
    
    this.queueResult = queueResult;
    return this;
  }

   /**
   * The final result of the enqueued Call. Valid values are: •dequeued - Enqueued caller exited the Queue via a Dequeue action (Dequeue command or Queue Members POST REST API).
   * @return queueResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The final result of the enqueued Call. Valid values are: •dequeued - Enqueued caller exited the Queue via a Dequeue action (Dequeue command or Queue Members POST REST API).")

  public String getQueueResult() {
    return queueResult;
  }


  public void setQueueResult(String queueResult) {
    this.queueResult = queueResult;
  }


  public DequeueWebhook queueTime(Integer queueTime) {
    
    this.queueTime = queueTime;
    return this;
  }

   /**
   * Time (in seconds) the call spent in the Queue. This is only available if the Call was actually enqueued.
   * @return queueTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Time (in seconds) the call spent in the Queue. This is only available if the Call was actually enqueued.")

  public Integer getQueueTime() {
    return queueTime;
  }


  public void setQueueTime(Integer queueTime) {
    this.queueTime = queueTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DequeueWebhook dequeueWebhook = (DequeueWebhook) o;
    return Objects.equals(this.requestType, dequeueWebhook.requestType) &&
        Objects.equals(this.callId, dequeueWebhook.callId) &&
        Objects.equals(this.accountId, dequeueWebhook.accountId) &&
        Objects.equals(this.from, dequeueWebhook.from) &&
        Objects.equals(this.to, dequeueWebhook.to) &&
        Objects.equals(this.callStatus, dequeueWebhook.callStatus) &&
        Objects.equals(this.direction, dequeueWebhook.direction) &&
        Objects.equals(this.conferenceId, dequeueWebhook.conferenceId) &&
        Objects.equals(this.queueId, dequeueWebhook.queueId) &&
        Objects.equals(this.queueResult, dequeueWebhook.queueResult) &&
        Objects.equals(this.queueTime, dequeueWebhook.queueTime) &&
        super.equals(o);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestType, callId, accountId, from, to, callStatus, direction, conferenceId, queueId, queueResult, queueTime, super.hashCode());
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DequeueWebhook {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    requestType: ").append(toIndentedString(requestType)).append("\n");
    sb.append("    callId: ").append(toIndentedString(callId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    callStatus: ").append(toIndentedString(callStatus)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    conferenceId: ").append(toIndentedString(conferenceId)).append("\n");
    sb.append("    queueId: ").append(toIndentedString(queueId)).append("\n");
    sb.append("    queueResult: ").append(toIndentedString(queueResult)).append("\n");
    sb.append("    queueTime: ").append(toIndentedString(queueTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }


  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
