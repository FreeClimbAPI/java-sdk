/*
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.github.freeclimbapi.models;

import java.util.Objects;
import java.util.Arrays;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;
import org.threeten.bp.format.DateTimeFormatter;
import java.io.IOException;
import java.util.*;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.annotations.SerializedName;
import java.util.List;
import java.math.BigDecimal;
import java.net.URI;
import org.openapitools.jackson.nullable.JsonNullable;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.github.freeclimbapi.enums.*;
import com.github.freeclimbapi.models.*;
import com.github.freeclimbapi.JSON;
import com.github.freeclimbapi.utils.*;

import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.concurrent.Callable;

/**
 * ConferenceResultAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ConferenceResultAllOf {
  public static final String SERIALIZED_NAME_CONFERENCE_ID = "conferenceId";
  @SerializedName(SERIALIZED_NAME_CONFERENCE_ID)
  private String conferenceId;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_ALIAS = "alias";
  @SerializedName(SERIALIZED_NAME_ALIAS)
  private String alias;

  public static final String SERIALIZED_NAME_PLAY_BEEP = "playBeep";
  @SerializedName(SERIALIZED_NAME_PLAY_BEEP)
  private PlayBeep playBeep = PlayBeep.ALWAYS;

  public static final String SERIALIZED_NAME_RECORD = "record";
  @SerializedName(SERIALIZED_NAME_RECORD)
  private Boolean record;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ConferenceStatus status;

  public static final String SERIALIZED_NAME_WAIT_URL = "waitUrl";
  @SerializedName(SERIALIZED_NAME_WAIT_URL)
  private String waitUrl;

  public static final String SERIALIZED_NAME_ACTION_URL = "actionUrl";
  @SerializedName(SERIALIZED_NAME_ACTION_URL)
  private String actionUrl;

  public static final String SERIALIZED_NAME_STATUS_CALLBACK_URL = "statusCallbackUrl";
  @SerializedName(SERIALIZED_NAME_STATUS_CALLBACK_URL)
  private String statusCallbackUrl;

  public static final String SERIALIZED_NAME_SUBRESOURCE_URIS = "subresourceUris";
  @SerializedName(SERIALIZED_NAME_SUBRESOURCE_URIS)
  private Object subresourceUris;

  public ConferenceResultAllOf() { 
  }

  public ConferenceResultAllOf conferenceId(String conferenceId) {
    
    this.conferenceId = conferenceId;
    return this;
  }

   /**
   * A string that uniquely identifies this Conference resource.
   * @return conferenceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A string that uniquely identifies this Conference resource.")

  public String getConferenceId() {
    return conferenceId;
  }


  public void setConferenceId(String conferenceId) {
    this.conferenceId = conferenceId;
  }


  public ConferenceResultAllOf accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * ID of the account that created this Conference.
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the account that created this Conference.")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public ConferenceResultAllOf alias(String alias) {
    
    this.alias = alias;
    return this;
  }

   /**
   * A description for this Conference.
   * @return alias
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Conference.")

  public String getAlias() {
    return alias;
  }


  public void setAlias(String alias) {
    this.alias = alias;
  }


  public ConferenceResultAllOf playBeep(PlayBeep playBeep) {
    
    this.playBeep = playBeep;
    return this;
  }

   /**
   * Get playBeep
   * @return playBeep
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PlayBeep getPlayBeep() {
    return playBeep;
  }


  public void setPlayBeep(PlayBeep playBeep) {
    this.playBeep = playBeep;
  }


  public ConferenceResultAllOf record(Boolean record) {
    
    this.record = record;
    return this;
  }

   /**
   * Flag indicating whether recording is enabled for this Conference.
   * @return record
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag indicating whether recording is enabled for this Conference.")

  public Boolean getRecord() {
    return record;
  }


  public void setRecord(Boolean record) {
    this.record = record;
  }


  public ConferenceResultAllOf status(ConferenceStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConferenceStatus getStatus() {
    return status;
  }


  public void setStatus(ConferenceStatus status) {
    this.status = status;
  }


  public ConferenceResultAllOf waitUrl(String waitUrl) {
    
    this.waitUrl = waitUrl;
    return this;
  }

   /**
   * URL referencing the audio file to be used as default wait music for the Conference when it is in the populated state.
   * @return waitUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL referencing the audio file to be used as default wait music for the Conference when it is in the populated state.")

  public String getWaitUrl() {
    return waitUrl;
  }


  public void setWaitUrl(String waitUrl) {
    this.waitUrl = waitUrl;
  }


  public ConferenceResultAllOf actionUrl(String actionUrl) {
    
    this.actionUrl = actionUrl;
    return this;
  }

   /**
   * URL invoked once the Conference is successfully created.
   * @return actionUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL invoked once the Conference is successfully created.")

  public String getActionUrl() {
    return actionUrl;
  }


  public void setActionUrl(String actionUrl) {
    this.actionUrl = actionUrl;
  }


  public ConferenceResultAllOf statusCallbackUrl(String statusCallbackUrl) {
    
    this.statusCallbackUrl = statusCallbackUrl;
    return this;
  }

   /**
   * URL to inform that the Conference status has changed.
   * @return statusCallbackUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL to inform that the Conference status has changed.")

  public String getStatusCallbackUrl() {
    return statusCallbackUrl;
  }


  public void setStatusCallbackUrl(String statusCallbackUrl) {
    this.statusCallbackUrl = statusCallbackUrl;
  }


  public ConferenceResultAllOf subresourceUris(Object subresourceUris) {
    
    this.subresourceUris = subresourceUris;
    return this;
  }

   /**
   * The list of subresources for this Conference. This includes participants and/or recordings.
   * @return subresourceUris
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of subresources for this Conference. This includes participants and/or recordings.")

  public Object getSubresourceUris() {
    return subresourceUris;
  }


  public void setSubresourceUris(Object subresourceUris) {
    this.subresourceUris = subresourceUris;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConferenceResultAllOf conferenceResultAllOf = (ConferenceResultAllOf) o;
    return Objects.equals(this.conferenceId, conferenceResultAllOf.conferenceId) &&
        Objects.equals(this.accountId, conferenceResultAllOf.accountId) &&
        Objects.equals(this.alias, conferenceResultAllOf.alias) &&
        Objects.equals(this.playBeep, conferenceResultAllOf.playBeep) &&
        Objects.equals(this.record, conferenceResultAllOf.record) &&
        Objects.equals(this.status, conferenceResultAllOf.status) &&
        Objects.equals(this.waitUrl, conferenceResultAllOf.waitUrl) &&
        Objects.equals(this.actionUrl, conferenceResultAllOf.actionUrl) &&
        Objects.equals(this.statusCallbackUrl, conferenceResultAllOf.statusCallbackUrl) &&
        Objects.equals(this.subresourceUris, conferenceResultAllOf.subresourceUris);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(conferenceId, accountId, alias, playBeep, record, status, waitUrl, actionUrl, statusCallbackUrl, subresourceUris);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConferenceResultAllOf {\n");
    sb.append("    conferenceId: ").append(toIndentedString(conferenceId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    playBeep: ").append(toIndentedString(playBeep)).append("\n");
    sb.append("    record: ").append(toIndentedString(record)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    waitUrl: ").append(toIndentedString(waitUrl)).append("\n");
    sb.append("    actionUrl: ").append(toIndentedString(actionUrl)).append("\n");
    sb.append("    statusCallbackUrl: ").append(toIndentedString(statusCallbackUrl)).append("\n");
    sb.append("    subresourceUris: ").append(toIndentedString(subresourceUris)).append("\n");
    sb.append("}");
    return sb.toString();
  }


  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

