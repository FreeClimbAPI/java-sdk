package com.vailsys.freeclimb.api.message;

import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonSyntaxException;
import com.vailsys.freeclimb.api.APIAccountRequester;
import com.vailsys.freeclimb.api.FreeClimbException;
import com.vailsys.freeclimb.api.FreeClimbJSONException;

import java.util.HashMap;
import java.util.Map;

import static com.vailsys.freeclimb.json.FreeClimbGson.gson;

/**
 * This class represents the set of wrappers around the FreeClimb Messages API.
 * It provides methods to handle all the operations supported by the FreeClimb
 * Messages API.
 */
public class MessagesRequester extends APIAccountRequester {
    private static final String pathHead = "Messages";
    /**
     * The default path for the Messages endpoint.
     */
    private final String path;
    /**
     * The accountId for the acting account.
     */
    private final String actingAccountId;

    /**
     * Creates a MessagesRequester. For most SDK users MessagesRequesters will be
     * created automatically by the
     * {@link com.vailsys.freeclimb.api.FreeClimbClient} but is available for more
     * advanced users who only require the features in this specific requester.
     *
     * @param credAccountId   The accountId to use as authentication credentials in
     *                        the HTTP basic Auth Header for requests made by this
     *                        requester.
     * @param credApiKey   The apiKey to use as authentication credentials in
     *                        the HTTP basic Auth Header for requests made by this
     *                        requester.
     * @param actingAccountId The accountId to act as. This can be the same as
     *                        {@code credAccountId} or the accountId of a subaccount
     *                        of the {@code credAccountId}.
     */
    public MessagesRequester(String credAccountId, String credApiKey, String actingAccountId) {
        super(credAccountId, credApiKey);
        this.actingAccountId = actingAccountId;
        this.path = APIAccountRequester.constructPath(APIAccountRequester.rootPath, this.actingAccountId, pathHead);
    }

    /**
     * Retrieve the {@code path} value generated by the MessagesRequester. This is
     * the URL path used in requests to FreeClimb.
     *
     * @return The {@code path}.
     */
    public String getPath() {
        return path;
    }

    /**
     * Retrieve the {@code actingAccountId}.
     *
     * @return The {@code actingAccountId}.
     */
    public String getActingAccountId() {
        return actingAccountId;
    }

    private String getMessagePath(String messageId) {
        return APIAccountRequester.constructPath(this.getPath(), messageId);
    }

    /**
     * Allows developers using the SDK to change which instance of the FreeClimb API
     * tht the MessagesRequester points to.
     *
     * @param newUrl The new URL to use in place of the default
     *               APIRequester.FREECLIMB_URL
     */
    public void setFreeClimbUrl(String newUrl) {
        super.setFreeClimbUrl(newUrl);
    }

    /**
     * Retrieve a single message from FreeClimb.
     *
     * @param messageId The {@code messageId} of the desired message.
     * @return The message matching the {@code messageId} provided.
     * @throws FreeClimbException when the request fails or the JSON is invalid.
     */
    public Message get(String messageId) throws FreeClimbException {
        return Message.fromJson(this.GET(this.getMessagePath(messageId)));
    }

    /**
     * Retrieve a list of Messages associated with the {@code actingAccountId}. This
     * wraps a HTTP GET request to the FreeClimb API's /Accounts/$accountId/Messages
     * endpoint. This will retrieve all messages for the acting account.
     *
     * @return An in-language representation of FreeClimb's paginated list response.
     *         This will be a paginated list of messages as returned by the
     *         FreeClimb API.
     * @throws FreeClimbException when the request fails or the JSON is invalid.
     */
    public MessageList get() throws FreeClimbException {
        return new MessageList(this.getCredentialAccountId(), this.getCredentialApiKey(), this.GET(this.getPath()));
    }

    /**
     * Retrieve a list of Messages associated with the {@code actingAccountId}. This
     * wraps an HTTP GET request to the FreeClimb API's
     * /Accounts/$accountId/Messages endpoint. This will retrieve all messages for
     * the acting account.
     *
     * @param filters an object containins a number of possible ways to filter the
     *                messages returned by FreeClimb.
     * @return An in-language representation of FreeClimb's paginated list response.
     *         This will be a paginated list of messages as returned by the
     *         FreeClimb API.
     * @throws FreeClimbException when the request fails or the JSON is invalid.
     * @see com.vailsys.freeclimb.api.message.MessagesSearchFilters
     */
    public MessageList get(MessagesSearchFilters filters) throws FreeClimbException {
        HashMap<String, String> filtersMap;

        try {
            filtersMap = gson.fromJson(gson.toJson(filters), APIAccountRequester.GETMapType);
        } catch (JsonSyntaxException jse) {
            throw new FreeClimbJSONException(jse);
        }

        return new MessageList(this.getCredentialAccountId(), this.getCredentialApiKey(),
                this.GET(this.getPath(), filtersMap));
    }

    /**
     * Send a new Message through the FreeClimb API. This function wraps an HTTP
     * POST request to the FreeClimb API's /Accounts/$accountId/Messages endpoint.
     * This creates a new message from the {@code actingAccountId}'s account.
     *
     * @param from The phone number to use as the sender. This must be an incoming
     *             number you have purchased from FreeClimb.
     * @param to   The phone number to send the message to.
     * @param text The text contained in the message. (maximum 254 characters)
     * @return The {@link com.vailsys.freeclimb.api.message.Message} object returned
     *         by FreeClimb that represents the message that was sent.
     * @throws FreeClimbException When the request fails or the JSON is invalid.
     */
    public Message create(String from, String to, String text) throws FreeClimbException {
        return this.create(from, to, text, null);
    }

    /**
     * Send a new Message through the FreeClimb API. This function wraps an HTTP
     * POST request to the FreeClimb API's /Accounts/$accountId/Messages endpoint.
     * This creates a new message from the {@code actingAccountId}'s account.
     *
     * @param from           The phone number to use as the sender. This must be an
     *                       incoming number you have purchased from FreeClimb.
     * @param to             The phone number to send the message to.
     * @param text           The text contained in the message. (maximum 254
     *                       characters)
     * @param messageOptions Optional arguments that can be provided when creating a
     *                       message. See FreeClimb documentation for details.
     * @return The {@link com.vailsys.freeclimb.api.message.Message} object returned
     *         by FreeClimb that represents the message that was sent.
     * @throws FreeClimbException when the request fails or the JSON is invalid.
     */
    public Message create(String from, String to, String text, MessageOptions messageOptions)
            throws FreeClimbException {
        return Message
                .fromJson(this.POST(this.path, new CreateMessageRequest(to, from, text, messageOptions).toJson()));
    }
}
