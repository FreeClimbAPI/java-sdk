/*
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.github.freeclimbapi;

import com.github.freeclimbapi.enums.*;
import com.github.freeclimbapi.models.*;
import java.util.*;
import org.junit.Assert;
import org.junit.Test;

/** Model tests for SMSTenDLCBrandRelationship */
public class SMSTenDLCBrandRelationshipTest {

    @Test
    public void testBASIC_ACCOUNTShouldWork() {

        SMSTenDLCBrandRelationship test = SMSTenDLCBrandRelationship.BASIC_ACCOUNT;
        Assert.assertEquals(test.getClass(), SMSTenDLCBrandRelationship.class);
    }

    @Test
    public void testBASIC_ACCOUNTShouldSerializeToEnum() {

        SMSTenDLCBrandRelationship expectedValue = SMSTenDLCBrandRelationship.BASIC_ACCOUNT;
        SMSTenDLCBrandRelationship calculatedValue =
                SMSTenDLCBrandRelationship.fromValue("BASIC_ACCOUNT");
        Assert.assertEquals(expectedValue, calculatedValue);
    }

    @Test
    public void testBASIC_ACCOUNTShouldDeserializeToString() {
        SMSTenDLCBrandRelationship test = SMSTenDLCBrandRelationship.BASIC_ACCOUNT;
        String expectedValue = "BASIC_ACCOUNT";
        String calculatedValue = test.toString();
        Assert.assertEquals(expectedValue, calculatedValue);
    }

    @Test
    public void testSMALL_ACCOUNTShouldWork() {

        SMSTenDLCBrandRelationship test = SMSTenDLCBrandRelationship.SMALL_ACCOUNT;
        Assert.assertEquals(test.getClass(), SMSTenDLCBrandRelationship.class);
    }

    @Test
    public void testSMALL_ACCOUNTShouldSerializeToEnum() {

        SMSTenDLCBrandRelationship expectedValue = SMSTenDLCBrandRelationship.SMALL_ACCOUNT;
        SMSTenDLCBrandRelationship calculatedValue =
                SMSTenDLCBrandRelationship.fromValue("SMALL_ACCOUNT");
        Assert.assertEquals(expectedValue, calculatedValue);
    }

    @Test
    public void testSMALL_ACCOUNTShouldDeserializeToString() {
        SMSTenDLCBrandRelationship test = SMSTenDLCBrandRelationship.SMALL_ACCOUNT;
        String expectedValue = "SMALL_ACCOUNT";
        String calculatedValue = test.toString();
        Assert.assertEquals(expectedValue, calculatedValue);
    }

    @Test
    public void testMEDIUM_ACCOUNTShouldWork() {

        SMSTenDLCBrandRelationship test = SMSTenDLCBrandRelationship.MEDIUM_ACCOUNT;
        Assert.assertEquals(test.getClass(), SMSTenDLCBrandRelationship.class);
    }

    @Test
    public void testMEDIUM_ACCOUNTShouldSerializeToEnum() {

        SMSTenDLCBrandRelationship expectedValue = SMSTenDLCBrandRelationship.MEDIUM_ACCOUNT;
        SMSTenDLCBrandRelationship calculatedValue =
                SMSTenDLCBrandRelationship.fromValue("MEDIUM_ACCOUNT");
        Assert.assertEquals(expectedValue, calculatedValue);
    }

    @Test
    public void testMEDIUM_ACCOUNTShouldDeserializeToString() {
        SMSTenDLCBrandRelationship test = SMSTenDLCBrandRelationship.MEDIUM_ACCOUNT;
        String expectedValue = "MEDIUM_ACCOUNT";
        String calculatedValue = test.toString();
        Assert.assertEquals(expectedValue, calculatedValue);
    }

    @Test
    public void testLARGE_ACCOUNTShouldWork() {

        SMSTenDLCBrandRelationship test = SMSTenDLCBrandRelationship.LARGE_ACCOUNT;
        Assert.assertEquals(test.getClass(), SMSTenDLCBrandRelationship.class);
    }

    @Test
    public void testLARGE_ACCOUNTShouldSerializeToEnum() {

        SMSTenDLCBrandRelationship expectedValue = SMSTenDLCBrandRelationship.LARGE_ACCOUNT;
        SMSTenDLCBrandRelationship calculatedValue =
                SMSTenDLCBrandRelationship.fromValue("LARGE_ACCOUNT");
        Assert.assertEquals(expectedValue, calculatedValue);
    }

    @Test
    public void testLARGE_ACCOUNTShouldDeserializeToString() {
        SMSTenDLCBrandRelationship test = SMSTenDLCBrandRelationship.LARGE_ACCOUNT;
        String expectedValue = "LARGE_ACCOUNT";
        String calculatedValue = test.toString();
        Assert.assertEquals(expectedValue, calculatedValue);
    }

    @Test
    public void testKEY_ACCOUNTShouldWork() {

        SMSTenDLCBrandRelationship test = SMSTenDLCBrandRelationship.KEY_ACCOUNT;
        Assert.assertEquals(test.getClass(), SMSTenDLCBrandRelationship.class);
    }

    @Test
    public void testKEY_ACCOUNTShouldSerializeToEnum() {

        SMSTenDLCBrandRelationship expectedValue = SMSTenDLCBrandRelationship.KEY_ACCOUNT;
        SMSTenDLCBrandRelationship calculatedValue =
                SMSTenDLCBrandRelationship.fromValue("KEY_ACCOUNT");
        Assert.assertEquals(expectedValue, calculatedValue);
    }

    @Test
    public void testKEY_ACCOUNTShouldDeserializeToString() {
        SMSTenDLCBrandRelationship test = SMSTenDLCBrandRelationship.KEY_ACCOUNT;
        String expectedValue = "KEY_ACCOUNT";
        String calculatedValue = test.toString();
        Assert.assertEquals(expectedValue, calculatedValue);
    }
}
