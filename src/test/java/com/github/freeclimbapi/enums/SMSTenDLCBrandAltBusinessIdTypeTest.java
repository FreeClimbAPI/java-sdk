/*
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.freeclimbapi;

import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;
import org.threeten.bp.OffsetDateTime;
import org.threeten.bp.LocalDate;

import java.util.*;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.File;
import java.math.BigDecimal;
import java.net.URI;
import java.net.URISyntaxException;
import com.github.freeclimbapi.enums.*;
import com.github.freeclimbapi.models.*;

/**
 * Model tests for SMSTenDLCBrandAltBusinessIdType
 */
 public class SMSTenDLCBrandAltBusinessIdTypeTest {
    
    
    
    @Test
    public void testNONEShouldWork() {

        SMSTenDLCBrandAltBusinessIdType test = SMSTenDLCBrandAltBusinessIdType.NONE;
         Assert.assertEquals(test.getClass(), SMSTenDLCBrandAltBusinessIdType.class);
    }

    @Test 
    public void testNONEShouldSerializeToEnum() {
    
        SMSTenDLCBrandAltBusinessIdType expectedValue = SMSTenDLCBrandAltBusinessIdType.NONE;
        SMSTenDLCBrandAltBusinessIdType calculatedValue = SMSTenDLCBrandAltBusinessIdType.fromValue("NONE");
        Assert.assertEquals(expectedValue, calculatedValue);
    }

    @Test
    public void testNONEShouldDeserializeToString() {
     SMSTenDLCBrandAltBusinessIdType test = SMSTenDLCBrandAltBusinessIdType.NONE;
      String expectedValue = "NONE";
      String calculatedValue = test.toString();
      Assert.assertEquals(expectedValue, calculatedValue);
    }
        @Test
    public void testDUNSShouldWork() {

        SMSTenDLCBrandAltBusinessIdType test = SMSTenDLCBrandAltBusinessIdType.DUNS;
         Assert.assertEquals(test.getClass(), SMSTenDLCBrandAltBusinessIdType.class);
    }

    @Test 
    public void testDUNSShouldSerializeToEnum() {
    
        SMSTenDLCBrandAltBusinessIdType expectedValue = SMSTenDLCBrandAltBusinessIdType.DUNS;
        SMSTenDLCBrandAltBusinessIdType calculatedValue = SMSTenDLCBrandAltBusinessIdType.fromValue("DUNS");
        Assert.assertEquals(expectedValue, calculatedValue);
    }

    @Test
    public void testDUNSShouldDeserializeToString() {
     SMSTenDLCBrandAltBusinessIdType test = SMSTenDLCBrandAltBusinessIdType.DUNS;
      String expectedValue = "DUNS";
      String calculatedValue = test.toString();
      Assert.assertEquals(expectedValue, calculatedValue);
    }
        @Test
    public void testGIINShouldWork() {

        SMSTenDLCBrandAltBusinessIdType test = SMSTenDLCBrandAltBusinessIdType.GIIN;
         Assert.assertEquals(test.getClass(), SMSTenDLCBrandAltBusinessIdType.class);
    }

    @Test 
    public void testGIINShouldSerializeToEnum() {
    
        SMSTenDLCBrandAltBusinessIdType expectedValue = SMSTenDLCBrandAltBusinessIdType.GIIN;
        SMSTenDLCBrandAltBusinessIdType calculatedValue = SMSTenDLCBrandAltBusinessIdType.fromValue("GIIN");
        Assert.assertEquals(expectedValue, calculatedValue);
    }

    @Test
    public void testGIINShouldDeserializeToString() {
     SMSTenDLCBrandAltBusinessIdType test = SMSTenDLCBrandAltBusinessIdType.GIIN;
      String expectedValue = "GIIN";
      String calculatedValue = test.toString();
      Assert.assertEquals(expectedValue, calculatedValue);
    }
        @Test
    public void testLEIShouldWork() {

        SMSTenDLCBrandAltBusinessIdType test = SMSTenDLCBrandAltBusinessIdType.LEI;
         Assert.assertEquals(test.getClass(), SMSTenDLCBrandAltBusinessIdType.class);
    }

    @Test 
    public void testLEIShouldSerializeToEnum() {
    
        SMSTenDLCBrandAltBusinessIdType expectedValue = SMSTenDLCBrandAltBusinessIdType.LEI;
        SMSTenDLCBrandAltBusinessIdType calculatedValue = SMSTenDLCBrandAltBusinessIdType.fromValue("LEI");
        Assert.assertEquals(expectedValue, calculatedValue);
    }

    @Test
    public void testLEIShouldDeserializeToString() {
     SMSTenDLCBrandAltBusinessIdType test = SMSTenDLCBrandAltBusinessIdType.LEI;
      String expectedValue = "LEI";
      String calculatedValue = test.toString();
      Assert.assertEquals(expectedValue, calculatedValue);
    }
    
    
 }